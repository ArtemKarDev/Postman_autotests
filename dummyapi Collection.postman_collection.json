{
	"info": {
		"_postman_id": "fbd145d6-94a9-41c8-96e4-911c139e6ba4",
		"name": "dummyapi Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25955364"
	},
	"item": [
		{
			"name": "User list (no auth)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							"console.log(\"Status User List (no auth): \" + pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/user",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "User list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(\"Status User List: \" + pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/user",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(\"Status Pagination: \" + pm.response.code);\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/user?page=1&limit=10",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "limit",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user and test valid shcema",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"email\", jsonData.email);\r",
							"pm.environment.set(\"user_id\", jsonData.id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(\"Status Create user: \" + pm.response.code);\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});\r",
							"\r",
							"\r",
							"var schema = {\r",
							"    \"items\": {\r",
							"        \"type\": \"boolean\"\r",
							"    }\r",
							"};\r",
							"\r",
							"var schema = {\r",
							"    type: 'object', \r",
							"    properties: {\r",
							"        id: {type:'string'},\r",
							"        firstName: {type:'string'},\r",
							"        lastName: {type:'string'},\r",
							"        email: {type:'string'},\r",
							"        registerDate: {type:'string'},\r",
							"        updatedDate: {type:'string'}\r",
							"    }\r",
							"};\r",
							"\r",
							"const jsonData1 = pm.response.json();\r",
							"//var data2 = [true, 123];\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(jsonData1, schema)).to.be.true;\r",
							"    //pm.expect(tv4.validate(data2, schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "email",
							"value": "creikoillitramau-{{$randomInt}}@yopmail.com",
							"type": "text"
						},
						{
							"key": "lastName",
							"value": "{{$randomLastName}}",
							"type": "text"
						},
						{
							"key": "firstName",
							"value": "{{$randomFirstName}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/create",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Updeta user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Tema\",\r\n    \"lastName\": \"Karl\",\r\n    \"phone\": 123456789\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/{{user_id}}",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "info user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(\"Status info user: \" + pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/{{user_id}}",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"post_id\", jsonData.id);\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"text\",\r\n    \"image\": \"https://randomuser.me/api/portraits/women/58.jpg\",\r\n    \"likes\": 1000,\r\n    \"tags\": \"QA\",\r\n    \"owner\": \"{{user_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/post/create",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"post",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Info post user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(\"Status User post: \" + pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/{{user_id}}/post",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"{{user_id}}",
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check posts list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/post",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"comment_id\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"comment\",\r\n    \"owner\": \"{{user_id}}\",\r\n    \"post\": \"{{post_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/comment/create",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"comment",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check user comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/{{user_id}}/comment",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"{{user_id}}",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check last user comment (pre request)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"// достанем id последнего user\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: \"https://dummyapi.io/data/v1/user\",\r",
							"    method: \"GET\",\r",
							"    header: {\r",
							"        \"app-id\": \"6418520c8266bffa82dbaf91\"\r",
							"    },\r",
							"\r",
							"}, function (error, response) {\r",
							"    var jsonData = response.json();\r",
							"    pm.collectionVariables.set(\"last_user_id\", jsonData.data[0].id);\r",
							"    //console.log(response); // выведем в консоль статус ответа\r",
							"    //console.log(response.json()); // выведем ответ в консоль текст ответа\r",
							"    console.log(jsonData.data[0].id);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/{{last_user_id}}/comment",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"{{last_user_id}}",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete comment",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/comment/{{comment_id}}",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"comment",
						"{{comment_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check user comment after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/{{user_id}}/comment",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"{{user_id}}",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/{{user_id}}",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check user after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"console.log(\"Status user after delete: \" + pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/{{user_id}}",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"{{user_id}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "6418520c8266bffa82dbaf91",
				"type": "string"
			},
			{
				"key": "key",
				"value": "app-id",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "last_user_id",
			"value": ""
		}
	]
}